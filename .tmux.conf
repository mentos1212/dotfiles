# マウス操作(required in version 1.*)
if-shell "[[ `tmux -V` == '*1.*' ]]" "set-option -g mouse-select-pane on"
if-shell "[[ `tmux -V` == '*1.*' ]]" "set-option -g mouse-select-window on"
if-shell "[[ `tmux -V` == '*1.*' ]]" "set-option -g mouse-resize-pane on"
if-shell "[[ `tmux -V` == '*1.*' ]]" "set-option -g mode-mouse on"

# マウス操作(required in version 2.*)
if-shell "[[ `tmux -V` == '*2.*' ]]" "set-option -g mouse on"
if-shell "[[ `tmux -V` == '*2.*' ]]" "bind -n WheelUpPane if-shell -F -t = \"#{mouse_any_flag}\" \"send-keys -M\" \"if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'\""

# 文字コード設定(required in version < 2.2）
if-shell "[[ `tmux -V | cut -d' ' -f2` -lt 2.2 ]]" "setw -g utf8 on"
if-shell "[[ `tmux -V | cut -d' ' -f2` -lt 2.2 ]]" "set -g status-utf8 on"

# コピー、選択モードのキーバインドvi
set-window-option -g mode-keys vi
# ウィンドウで動作があるとステータスラインでハイライト
set-window-option -g monitor-activity on
# window閉じた時に番号を詰める
set-option -g renumber-windows on
# 設定ファイル再読み込み r
bind C-r source-file ~/.tmux.conf \; display-message "Reload Config!!"
# escapeの効きをよくする
set -s escape-time 0

## status line customize
set -g pane-border-fg colour240
set-option -g status-interval 1
set-option -g status-left  "#{?client_prefix,#[reverse],}[#(if hostname | grep -q 'local';then echo 'local';else hostname | cut -d. -f1;fi):#S] "
set-option -g status-left-length 50
set-option -g status-right-length 50
set-window-option -g window-status-format "[#I:#W]"
set-option -g status-right ""

# ターミナルの設定
set -g default-terminal "xterm-256color"
set -g terminal-overrides "term:colors=256"
set -g display-time 2000
set-option -g xterm-keys on

# prefixをC-tに変更
unbind C-b
set-option -g prefix C-t

# remoteのtmuxにprefixを送る
bind C-g send-prefix

# detach
bind C-d detach

# 画面分割
bind C-n split-window -h -c '#{pane_current_path}'  # 左右に分割
bind C-o kill-pane        # current paneをkill
bind C-u kill-pane -a     # current pane以外を全てkill
bind C-s swap-pane -U     # paneを入れ替え

# pecoでsessionやwindowを選択してswitch
bind s split-window -l 10 -c '#{pane_current_path}' -v "tmux ls < /dev/null | peco | cut -d: -f1 | xargs tmux switch-client -t"
bind g split-window -l 10 -c '#{pane_current_path}' -v "tmux list-windows < /dev/null | peco | cut -d: -f1 | xargs tmux select-window -t"

# キーバインド（コピーモード）
bind Space copy-mode
bind p paste-buffer
# vでマーク開始
bind -t vi-copy v begin-selection
# Vで行の先頭からマーク開始
bind -t vi-copy V select-line
# C-vで矩形選択の切り替え
bind -t vi-copy C-v rectangle-toggle 
# Esc キーでコピーの反転を解除（コピーモードは抜けない）
bind-key -t vi-copy Escape clear-selection
# Ctrl-c キーでコピーの反転を解除し、コピーモードから抜ける
bind-key -t vi-copy C-c cancel
# Emacsバインドも使えるように
# bind-key -t vi-copy C-f cursor-right
# bind-key -t vi-copy C-b cursor-left
# bind-key -t vi-copy C-p cursor-up
# bind-key -t vi-copy C-n cursor-down
bind-key -t vi-copy C-a start-of-line
bind-key -t vi-copy C-e end-of-line

# ページ送り
bind -t vi-copy M-k page-up
bind -t vi-copy M-j page-down

# vimではoptionのバインドが使えないため再割当て
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n M-k if-shell "$is_vim" "send-keys ˚" "send-keys M-k"
bind -n M-j if-shell "$is_vim" "send-keys ∆" "send-keys M-j"
bind -n M-K if-shell "$is_vim" "send-keys " "send-keys C-u"
bind -n M-J if-shell "$is_vim" "send-keys Ô" "send-keys C-d"

# OSX(local)とLinux(Server)で別の設定を反映
if-shell '[[ "${OSTYPE:0:6}" == "darwin" ]]' "source-file ~/dotfiles/tmux/.tmux.conf.osx" "source-file ~/dotfiles/tmux/.tmux.conf.linux"

# 以下の設定は.tmux.confに書かないとダメっぽい（if-shellをつけるとうまくいかない）
# Tmux plugin manager
# set -g @plugin 'tmux-plugins/tpm'
# copy-modeで検索ハイライトやURLコピーなどができる
# set -g @plugin 'tmux-plugins/tmux-copycat'

# Initialize TPM（.tmux.confの末尾におく）
# run '~/.tmux/plugins/tpm/tpm'
