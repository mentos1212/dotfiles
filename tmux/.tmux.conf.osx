# tmuxのvimでclipboardを使用可能に
set-option -g default-command "reattach-to-user-namespace -l zsh"

## status line customize
set-option -g status-bg colour27
set-option -g pane-active-border-fg colour27
set-window-option -g window-status-current-format "#[bg=colour208][#I:#W]"

# ペイン移動（vimと共通）
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-Left if-shell "$is_vim" "send-keys C-Left" "select-pane -L"
bind -n C-Down if-shell "$is_vim" "send-keys C-Down" "select-pane -D"
bind -n C-Up if-shell "$is_vim" "send-keys C-Up" "select-pane -U"
bind -n C-Right if-shell "$is_vim" "send-keys C-Right" "select-pane -R"

# ウィンドウ関連
# 新規ウィンドウを開くときは現在のディレクトリで開き、window nameをディレクトリ名にする
bind -n M-n run "(tmux new-window -c #{pane_current_path} -n $(basename #{pane_current_path}))"
bind -n M-o kill-window     # current windowをkill
bind -n M-u kill-window -a  # current window以外を全てkill
bind -n M-l next-window     # 右に移動
bind -n M-h previous-window # 左に移動

# 現在のwindowを左右のwindowと入れ替え
bind -n M-Left run 'cw=$(tmux display-message -p \#I) && [ $cw -gt 0 ] && tmux swap-window -s $cw -t $(($cw - 1))'
bind -n M-Right run 'cw=$(tmux display-message -p \#I) && tmux swap-window -s $cw -t $(($cw + 1))'

# ローカルのcopy modeはC-s
bind -n C-s copy-mode
# yとEnterでyankし、clipboardに送る
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
